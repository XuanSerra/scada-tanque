PS C:\Users\Joan> curl -v -H "Authorization: Bearer curl -H "Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsImV4cCI6OTIyMzM3MjAzNjg1NDc3NSwiYXQiOjQxOH0.2tUJKTuaKxR2OEGQ3Gi9huO7xJltkb_6BtJb1dO23kQ" \
>>      -H "Content-Type: application/json" \
>>      -X GET "https://cloud.efento.io/api/v1/devices"" \
>>      -H "Content-Type: application/json" \
>>      -X GET "https://cloud.efento.io/api/v1/devices"
>> curl -v \
>>      -H "Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsImV4cCI6OTIyMzM3MjAzNjg1NDc3NSwiYXQiOjQxOH0.2tUJKTuaKxR2OEGQ3Gi9huO7xJltkb_6BtJb1dO23kQ" \
>>      -H "Content-Type: application/json" \
>>      -X GET "https://cloud.efento.io/api/v1/devices"
>>
Invoke-WebRequest : No se puede enlazar el parámetro 'Headers'. No se puede convertir el valor "Authorization: Bearer
curl -H " de tipo "System.String" al tipo "System.Collections.IDictionary".
En línea: 1 Carácter: 12
+ curl -v -H "Authorization: Bearer curl -H "Authorization: Bearer eyJh ...
+            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Invoke-WebRequest], ParameterBindingException
    + FullyQualifiedErrorId : CannotConvertArgumentNoMessage,Microsoft.PowerShell.Commands.InvokeWebRequestCommand

-H : El término '-H' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable.
Compruebe si escribió correctamente el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e
inténtelo de nuevo.
En línea: 4 Carácter: 6
+      -H "Content-Type: application/json" \
+      ~~
    + CategoryInfo          : ObjectNotFound: (-H:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

-X : El término '-X' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable.
Compruebe si escribió correctamente el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e
inténtelo de nuevo.
En línea: 5 Carácter: 6
+      -X GET "https://cloud.efento.io/api/v1/devices"
+      ~~
    + CategoryInfo          : ObjectNotFound: (-X:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

curl : URI no válido: no se puede analizar el nombre de host.
En línea: 6 Carácter: 1
+ curl -v \
+ ~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [Invoke-WebRequest], UriFormatException
    + FullyQualifiedErrorId : System.UriFormatException,Microsoft.PowerShell.Commands.InvokeWebRequestCommand

-H : El término '-H' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable.
Compruebe si escribió correctamente el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e
inténtelo de nuevo.
En línea: 7 Carácter: 6
+      -H "Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsI ...
+      ~~
    + CategoryInfo          : ObjectNotFound: (-H:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

-H : El término '-H' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable.
Compruebe si escribió correctamente el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e
inténtelo de nuevo.
En línea: 8 Carácter: 6
+      -H "Content-Type: application/json" \
+      ~~
    + CategoryInfo          : ObjectNotFound: (-H:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

-X : El término '-X' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable.
Compruebe si escribió correctamente el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e
inténtelo de nuevo.
En línea: 9 Carácter: 6
+      -X GET "https://cloud.efento.io/api/v1/devices"
+      ~~
    + CategoryInfo          : ObjectNotFound: (-X:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\Joan> curl -v \
>>      -H "Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsImV4cCI6OTIyMzM3MjAzNjg1NDc3NSwiYXQiOjQxOH0.2tUJKTuaKxR2OEGQ3Gi9huO7xJltkb_6BtJb1dO23kQ" \
>>      -H "Content-Type: application/json" \
>>      -X GET "https://cloud.efento.io/api/v1/devices"
>>
curl : URI no válido: no se puede analizar el nombre de host.
En línea: 1 Carácter: 1
+ curl -v \
+ ~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [Invoke-WebRequest], UriFormatException
    + FullyQualifiedErrorId : System.UriFormatException,Microsoft.PowerShell.Commands.InvokeWebRequestCommand

-H : El término '-H' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable.
Compruebe si escribió correctamente el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e
inténtelo de nuevo.
En línea: 2 Carácter: 6
+      -H "Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsI ...
+      ~~
    + CategoryInfo          : ObjectNotFound: (-H:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

-H : El término '-H' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable.
Compruebe si escribió correctamente el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e
inténtelo de nuevo.
En línea: 3 Carácter: 6
+      -H "Content-Type: application/json" \
+      ~~
    + CategoryInfo          : ObjectNotFound: (-H:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

-X : El término '-X' no se reconoce como nombre de un cmdlet, función, archivo de script o programa ejecutable.
Compruebe si escribió correctamente el nombre o, si incluyó una ruta de acceso, compruebe que dicha ruta es correcta e
inténtelo de nuevo.
En línea: 4 Carácter: 6
+      -X GET "https://cloud.efento.io/api/v1/devices"
+      ~~
    + CategoryInfo          : ObjectNotFound: (-X:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\Joan> curl.exe -v `
>>      -H "Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsImV4cCI6OTIyMzM3MjAzNjg1NDc3NSwiYXQiOjQxOH0.2tUJKTuaKxR2OEGQ3Gi9huO7xJltkb_6BtJb1dO23kQ" `
>>      -H "Content-Type: application/json" `
>>      -X GET "https://cloud.efento.io/api/v1/devices"
>>
Note: Unnecessary use of -X or --request, GET is already inferred.
* Host cloud.efento.io:443 was resolved.
* IPv6: (none)
* IPv4: 18.156.72.221, 18.195.253.165
*   Trying 18.156.72.221:443...
* Connected to cloud.efento.io (18.156.72.221) port 443
* schannel: disabled automatic use of client certificate
* ALPN: curl offers http/1.1
* ALPN: server did not agree on a protocol. Uses default.
* using HTTP/1.x
> GET /api/v1/devices HTTP/1.1
> Host: cloud.efento.io
> User-Agent: curl/8.9.1
> Accept: */*
> Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsImV4cCI6OTIyMzM3MjAzNjg1NDc3NSwiYXQiOjQxOH0.2tUJKTuaKxR2OEGQ3Gi9huO7xJltkb_6BtJb1dO23kQ
> Content-Type: application/json
>
* Request completely sent off
< HTTP/1.1 404 Not Found
< Content-Length: 85
< Content-Type: application/json
< Date: Wed, 26 Feb 2025 15:49:33 GMT
<
{"timestamp":1740584973369,"status":404,"error":"Not Found","path":"/api/v1/devices"}* Connection #0 to host cloud.efento.io left intact
PS C:\Users\Joan> curl.exe -v `
>>      -H "Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsImV4cCI6OTIyMzM3MjAzNjg1NDc3NSwiYXQiOjQxOH0.2tUJKTuaKxR2OEGQ3Gi9huO7xJltkb_6BtJb1dO23kQ" `
>>      -H "Content-Type: application/json" `
>>      -X GET "https://cloud.efento.io/api/v2/devices"
>>
Note: Unnecessary use of -X or --request, GET is already inferred.
* Host cloud.efento.io:443 was resolved.
* IPv6: (none)
* IPv4: 18.156.72.221, 18.195.253.165
*   Trying 18.156.72.221:443...
* Connected to cloud.efento.io (18.156.72.221) port 443
* schannel: disabled automatic use of client certificate
* ALPN: curl offers http/1.1
* ALPN: server did not agree on a protocol. Uses default.
* using HTTP/1.x
> GET /api/v2/devices HTTP/1.1
> Host: cloud.efento.io
> User-Agent: curl/8.9.1
> Accept: */*
> Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsImV4cCI6OTIyMzM3MjAzNjg1NDc3NSwiYXQiOjQxOH0.2tUJKTuaKxR2OEGQ3Gi9huO7xJltkb_6BtJb1dO23kQ
> Content-Type: application/json
>
* Request completely sent off
< HTTP/1.1 404 Not Found
< Content-Length: 89
< Content-Type: application/json
< Date: Wed, 26 Feb 2025 15:50:15 GMT
<
{"timestamp":1740585015549,"status":404,"error":"Not Found","path":"/api/v1/get/devices"}* Connection #0 to host cloud.efento.io left intact
PS C:\Users\Joan> curl.exe -v `
>>      -H "Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsImV4cCI6OTIyMzM3MjAzNjg1NDc3NSwiYXQiOjQxOH0.2tUJKTuaKxR2OEGQ3Gi9huO7xJltkb_6BtJb1dO23kQ" `
>>      -H "Content-Type: application/json" `
>>      -X GET "https://cloud.efento.io/api/v2/get/devices"
>>
Note: Unnecessary use of -X or --request, GET is already inferred.
* Host cloud.efento.io:443 was resolved.
* IPv6: (none)
* IPv4: 18.156.72.221, 18.195.253.165
*   Trying 18.156.72.221:443...
* Connected to cloud.efento.io (18.156.72.221) port 443
* schannel: disabled automatic use of client certificate
* ALPN: curl offers http/1.1
* ALPN: server did not agree on a protocol. Uses default.
* using HTTP/1.x
> GET /api/v2/get/devices HTTP/1.1
> Host: cloud.efento.io
> User-Agent: curl/8.9.1
> Accept: */*
> Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsImV4cCI6OTIyMzM3MjAzNjg1NDc3NSwiYXQiOjQxOH0.2tUJKTuaKxR2OEGQ3Gi9huO7xJltkb_6BtJb1dO23kQ
> Content-Type: application/json
>
* Request completely sent off
< HTTP/1.1 404 Not Found
< Content-Length: 93
< Content-Type: application/json
< Date: Wed, 26 Feb 2025 15:50:59 GMT
<
{"timestamp":1740585059192,"status":404,"error":"Not Found","path":"/api/v1/get/get/devices"}* Connection #0 to host cloud.efento.io left intact
PS C:\Users\Joan> $headers = @{
>>     "Authorization" = "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsImV4cCI6OTIyMzM3MjAzNjg1NDc3NSwiYXQiOjQxOH0.2tUJKTuaKxR2OEGQ3Gi9huO7xJltkb_6BtJb1dO23kQ"
>>     "Content-Type"  = "application/json"
>> }
>>
>> Invoke-RestMethod -Uri "https://cloud.efento.io/api/v2/get/devices" -Headers $headers -Method Get
>>
Invoke-RestMethod : {"timestamp":1740585079482,"status":404,"error":"Not Found","path":"/api/v1/get/get/devices"}
En línea: 6 Carácter: 1
+ Invoke-RestMethod -Uri "https://cloud.efento.io/api/v2/get/devices" - ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Net.HttpWebRequest:HttpWebRequest) [Invoke-RestMethod], WebExc
   eption
    + FullyQualifiedErrorId : WebCmdletWebResponseException,Microsoft.PowerShell.Commands.InvokeRestMethodCommand
PS C:\Users\Joan> Invoke-RestMethod -Uri "https://cloud.efento.io/api/v2/devices" -Headers $headers -Method Get
>>
Invoke-RestMethod : {"timestamp":1740585127346,"status":404,"error":"Not Found","path":"/api/v1/get/devices"}
En línea: 1 Carácter: 1
+ Invoke-RestMethod -Uri "https://cloud.efento.io/api/v2/devices" -Head ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Net.HttpWebRequest:HttpWebRequest) [Invoke-RestMethod], WebExc
   eption
    + FullyQualifiedErrorId : WebCmdletWebResponseException,Microsoft.PowerShell.Commands.InvokeRestMethodCommand
PS C:\Users\Joan> # Define la URL de la API con v2
>> $url = "https://api.efento.io/v2/devices"  # Cambia "endpoint" por el real
>>
>> # Define tu clave API (asegúrate de que sea válida para v2)
>> $apiKey = "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsImV4cCI6OTIyMzM3MjAzNjg1NDc3NSwiYXQiOjQxOH0.2tUJKTuaKxR2OEGQ3Gi9huO7xJltkb_6BtJb1dO23kQ"
>>
>> # Configura los encabezados
>> $headers = @{
>>     "Authorization" = "Bearer $apiKey"  # O el formato que especifique Efento para v2
>>     "Content-Type"  = "application/json"
>> }
>>
>> # Realiza la solicitud GET
>> try {
>>     $response = Invoke-RestMethod -Uri $url -Method Get -Headers $headers
>>     # Muestra la respuesta en formato legible
>>     $response | ConvertTo-Json
>> } catch {
>>     # Maneja errores
>>     Write-Host "Error: $($_.Exception.Message)"
>>
>> cls
>> ^Q
>> exit
>> q
>> ^C
PS C:\Users\Joan>
PS C:\Users\Joan> # Define la URL para listar organizaciones
>> $url = "https://cloud.efento.io/api/v2/organizations"
>> $apiKey = "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsImV4cCI6OTIyMzM3MjAzNjg1NDc3NSwiYXQiOjQxOH0.2tUJKTuaKxR2OEGQ3Gi9huO7xJltkb_6BtJb1dO23kQ"  # Pega aquí el token completo que copiaste
>>
>> # Configura los encabezados
>> $headers = @{
>>     "Authorization" = $apiKey  # Sin "Bearer" según el manual
>>     "Content-Type"  = "application/json"
>> }
>>
>> # Realiza la solicitud GET
>> try {
>>     $response = Invoke-RestMethod -Uri $url -Method Get -Headers $headers
>>     $response | ConvertTo-Json -Depth 10
>> } catch {
>>     Write-Host "Error: $($_.Exception.Message)"
>>     Write-Host "Código: $($_.Exception.Response.StatusCode)"
>> }
{
    "totalCount":  1,
    "organizations":  [
                          {
                              "id":  9027,
                              "name":  "AsociaciÃ³n Ranxos de Bonany",
                              "createdAt":  "2024-09-16 11:38:27",
                              "updatedAt":  "2024-09-16 11:38:27",
                              "token":  "3db7633b-2c2b-4aef-aedb-85bc995842dd",
                              "smsSent":  0,
                              "smsLeft":  0,
                              "measurementPointsCount":  1,
                              "smsReminderThreshold":  10
                          }
                      ]
}
PS C:\Users\Joan> # Define la URL con el ID de tu organización
>> $organizationId = "9027"  # El ID que obtuviste
>> $url = "https://cloud.efento.io/api/v2/locations?organization-id=$organizationId"
>> $apiKey = "eyJhbGciOiJ1uI1NiJ9.eyJzdWIiOiJ..."  # Usa el token que copiaste de Efento Cloud
>>
>> # Configura los encabezados
>> $headers = @{
>>     "Authorization" = $apiKey  # Sin "Bearer" según el manual
>>     "Content-Type"  = "application/json"
>> }
>>
>> # Realiza la solicitud GET
>> try {
>>     $response = Invoke-RestMethod -Uri $url -Method Get -Headers $headers
>>     $response | ConvertTo-Json -Depth 10
>> } catch {
>>     Write-Host "Error: $($_.Exception.Message)"
>>     Write-Host "Código: $($_.Exception.Response.StatusCode)"
>> }
Error: Error en el servidor remoto: (401) No autorizado.
Código: Unauthorized
PS C:\Users\Joan> # Define la URL con el ID de tu organización
>> $organizationId = "9027"  # El ID que obtuviste
>> $url = "https://cloud.efento.io/api/v2/locations?organization-id=$organizationId"
>> $apiKey = "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsImV4cCI6OTIyMzM3MjAzNjg1NDc3NSwiYXQiOjQxOH0.2tUJKTuaKxR2OEGQ3Gi9huO7xJltkb_6BtJb1dO23kQ"
>>   # Usa el token que copiaste de Efento Cloud
>>
>> # Configura los encabezados
>> $headers = @{
>>     "Authorization" = $apiKey  # Sin "Bearer" según el manual
>>     "Content-Type"  = "application/json"
>> }
>>
>> # Realiza la solicitud GET
>> try {
>>     $response = Invoke-RestMethod -Uri $url -Method Get -Headers $headers
>>     $response | ConvertTo-Json -Depth 10
>> } catch {
>>     Write-Host "Error: $($_.Exception.Message)"
>>     Write-Host "Código: $($_.Exception.Response.StatusCode)"
>> }
{
    "locations":  [
                      {
                          "id":  17420,
                          "name":  "AsociaciÃ³n Ranxos de Bonany",
                          "organizationId":  9027,
                          "createdAt":  "2024-09-16 11:38:27",
                          "parentId":  0
                      }
                  ],
    "totalCount":  1
}
PS C:\Users\Joan> # Define la URL con el ID de la ubicación
>> $locationId = "17420"  # El ID que obtuviste
>> $url = "https://cloud.efento.io/api/v2/measurement-points?location-ids=$locationId"
>> $apiKey = "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsImV4cCI6OTIyMzM3MjAzNjg1NDc3NSwiYXQiOjQxOH0.2tUJKTuaKxR2OEGQ3Gi9huO7xJltkb_6BtJb1dO23kQ"  # Usa el token que copiaste de Efento Cloud
>>
>> # Configura los encabezados
>> $headers = @{
>>     "Authorization" = $apiKey  # Sin "Bearer" según el manual
>>     "Content-Type"  = "application/json"
>> }
>>
>> # Realiza la solicitud GET
>> try {
>>     $response = Invoke-RestMethod -Uri $url -Method Get -Headers $headers
>>     # Convierte la respuesta a JSON y guárdala en una variable
>>     $jsonResponse = $response | ConvertTo-Json -Depth 10
>>
>>     # Guarda el JSON en un archivo .txt
>>     $filePath = "C:\ruta\donde\quieres\guardar\measurement_points.txt"  # Ajusta la ruta
>>     $jsonResponse | Out-File -FilePath $filePath -Encoding UTF8
>>
>>     Write-Host "Datos guardados exitosamente en $filePath"
>>     # Opcional: Muestra el contenido en la consola
>>     $response
>> } catch {
>>     Write-Host "Error: $($_.Exception.Message)"
>>     Write-Host "Código: $($_.Exception.Response.StatusCode)"
>> }
Error: No se puede encontrar una parte de la ruta de acceso 'C:\ruta\donde\quieres\guardar\measurement_points.txt'.
Código:
PS C:\Users\Joan> # Define la URL con el ID de la ubicación
>> $locationId = "17420"  # El ID que obtuviste
>> $url = "https://cloud.efento.io/api/v2/measurement-points?location-ids=$locationId"
>> $apiKey = "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsImV4cCI6OTIyMzM3MjAzNjg1NDc3NSwiYXQiOjQxOH0.2tUJKTuaKxR2OEGQ3Gi9huO7xJltkb_6BtJb1dO23kQ"  # Usa el token que copiaste de Efento Cloud
>>
>> # Configura los encabezados
>> $headers = @{
>>     "Authorization" = $apiKey  # Sin "Bearer" según el manual
>>     "Content-Type"  = "application/json"
>> }
>>
>> # Realiza la solicitud GET
>> try {
>>     $response = Invoke-RestMethod -Uri $url -Method Get -Headers $headers
>>     # Convierte la respuesta a JSON y guárdala en una variable
>>     $jsonResponse = $response | ConvertTo-Json -Depth 10
>>
>>     # Guarda el JSON en un archivo .txt
>>     $filePath = "D:\ESCRITORIO\@@@@@ esc X\1 AIGUA RNX\1 EFENTO DATALOGGERS\IA x API Grok\DATOS EFENTO\measurement_points.txt"  # Ajusta la ruta
>>     $jsonResponse | Out-File -FilePath $filePath -Encoding UTF8
>>
>>     Write-Host "Datos guardados exitosamente en $filePath"
>>     # Opcional: Muestra el contenido en la consola
>>     $response
>> } catch {
>>     Write-Host "Error: $($_.Exception.Message)"
>>     Write-Host "Código: $($_.Exception.Response.StatusCode)"
>> ^C
PS C:\Users\Joan>
PS C:\Users\Joan> # Define la URL con el ID de la ubicación
>> $locationId = "17420"  # El ID que obtuviste
>> $url = "https://cloud.efento.io/api/v2/measurement-points?location-ids=$locationId"
>> $apiKey = "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsImV4cCI6OTIyMzM3MjAzNjg1NDc3NSwiYXQiOjQxOH0.2tUJKTuaKxR2OEGQ3Gi9huO7xJltkb_6BtJb1dO23kQ"  # Usa el token que copiaste de Efento Cloud
>>
>> # Configura los encabezados
>> $headers = @{
>>     "Authorization" = $apiKey  # Sin "Bearer" según el manual
>>     "Content-Type"  = "application/json"
>> }
>>
>> # Realiza la solicitud GET
>> try {
>>     $response = Invoke-RestMethod -Uri $url -Method Get -Headers $headers
>>     # Convierte la respuesta a JSON y guárdala en una variable
>>     $jsonResponse = $response | ConvertTo-Json -Depth 10
>>
>>     # Guarda el JSON en un archivo .txt
>>     $filePath = "D:\ESCRITORIO\@@@@@ esc X\1 AIGUA RNX\1 EFENTO DATALOGGERS\IA x API Grok\DATOS EFENTO\measurement_points.txt"  # Ajusta la ruta
>>     $jsonResponse | Out-File -FilePath $filePath -Encoding UTF8
>>
>>     Write-Host "Datos guardados exitosamente en $filePath"
>>     # Opcional: Muestra el contenido en la consola
>>     $response
>> } catch {
>>     Write-Host "Error: $($_.Exception.Message)"
>>     Write-Host "Código: $($_.Exception.Response.StatusCode)"
>> ^C
PS C:\Users\Joan> # Define la URL con el ID de la ubicación
>> $locationId = "17420"  # El ID que obtuviste
>> $url = "https://cloud.efento.io/api/v2/measurement-points?location-ids=$locationId"
>> $apiKey = "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiItMSIsImV4cCI6OTIyMzM3MjAzNjg1NDc3NSwiYXQiOjQxOH0.2tUJKTuaKxR2OEGQ3Gi9huO7xJltkb_6BtJb1dO23kQ"  # Usa el token completo
>>
>> # Configura los encabezados
>> $headers = @{
>>     "Authorization" = $apiKey  # Sin "Bearer" según el manual
>>     "Content-Type"  = "application/json"
>> }
>>
>> # Establece un tiempo de espera (en segundos)
>> $timeoutSeconds = 30
>>
>> try {
>>     # Realiza la solicitud GET con tiempo de espera
>>     $response = Invoke-RestMethod -Uri $url -Method Get -Headers $headers -TimeoutSec $timeoutSeconds
>>     # Convierte la respuesta a JSON y guárdala en una variable
>>     $jsonResponse = $response | ConvertTo-Json -Depth 10
>>
>>     # Guarda el JSON en un archivo .txt en la ruta especificada
>>     $filePath = "D:\ESCRITORIO\@@@@@ esc X\1 AIGUA RNX\1 EFENTO DATALOGGERS\IA x API Grok\DATOS EFENTO\measurement_points.txt"
>>     # Crea la carpeta si no existe
>>     $directory = Split-Path $filePath -Parent
>>     if (!(Test-Path $directory)) {
>>         New-Item -ItemType Directory -Force -Path $directory
>>     }
>>     $jsonResponse | Out-File -FilePath $filePath -Encoding UTF8
>>
>>     Write-Host "Datos guardados exitosamente en $filePath"
>>     # Muestra el contenido en la consola
>>     $response
>> } catch {
>>     Write-Host "Error detectado:"
>>     Write-Host "Mensaje: $($_.Exception.Message)"
>>     Write-Host "Código: $($_.Exception.Response.StatusCode)"
>>     Write-Host "Detalles adicionales: $($_.Exception.Response)"
>> }
Datos guardados exitosamente en D:\ESCRITORIO\@@@@@ esc X\1 AIGUA RNX\1 EFENTO DATALOGGERS\IA x API Grok\DATOS EFENTO\measurement_points.txt

measurementPoints
-----------------
{@{id=1013913; locationId=17420; createdAt=2024-11-08 10:04:09; name=DEPOSITO-1; unconfirmedAlertsCount=0; activeAle...


PS C:\Users\Joan>